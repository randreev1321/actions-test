name: Test

on:
  push:
    tags:
    - 'v*'

jobs:

  build-and-publish-docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      - 
        name: Set app version
        run: V=${{ github.ref_name }} && VT="${V#v}" && sed "s@APP_VERSION@$VT@" version.go.in > version.go
      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            randreev/file
          #  ghcr.io/username/app
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v8
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-publish-github:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - 
          os: ubuntu-latest
          TARGET: arm
        - 
          os: ubuntu-latest
          TARGET: arm64
        - 
          os: ubuntu-latest
          TARGET: amd64

    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@master

    - uses: actions/setup-go@v3
      name: Set up Go
      with:
        go-version: 1.19

    - name: Set app version
      run: V=${{ github.ref_name }} && VT="${V#v}" && sed "s@APP_VERSION@$VT@" version.go.in > version.go

    - name: Build
      run: GOOS=linux GOARCH=${{ matrix.TARGET }} go build -ldflags="-s -w" -v -o file

    - name: Run UPX
      uses: crazy-max/ghaction-upx@v2
      with:
        version: latest
        files: |
          ./file
        args: --best

    - name: Compress
      uses: a7ul/tar-action@v1.1.2
      id: compress
      with:
        command: c
        files: |
          ./file
          ./README.md
        outPath: file-${{ matrix.TARGET }}.tar.gz
    
    - uses: actions/upload-artifact@v3
      with:
        name: file-${{ matrix.TARGET }}.tar.gz
        path: file-${{ matrix.TARGET }}.tar.gz

    - uses: softprops/action-gh-release@v1
      name: Upload binaries to release
      if: github.ref_type == 'tag'
      with:
        files: file-${{ matrix.TARGET }}.tar.gz
        prerelease: ${{ contains(github.ref_name, 'rc') }}
        generate_release_notes: true
        append_body: true
